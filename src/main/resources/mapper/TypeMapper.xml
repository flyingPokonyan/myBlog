<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myblog.mapper.TypeMapper">
    
    <resultMap id="type" type="com.myblog.entity.Type">
        <id property="id" column="tid"></id>
        <result property="name" column="name"></result>
        <collection property="blogs" ofType="com.myblog.entity.Blog">
            <id property="id" column="bid"/>
            <result property="title" column="title"/>
            <result property="typeId" column="type_id"/>
        </collection>
    </resultMap>

    <select id="typeList" resultType="com.myblog.entity.Type">
        select * from t_type
    </select>

    <select id="findById" resultType="com.myblog.entity.Type" parameterType="java.lang.Long">
        select * from t_type
        where id = #{id};
    </select>

    <select id="findByName" resultType="com.myblog.entity.Type">
        select * from t_type
        where name = #{name};
    </select>

    <insert id="saveType" parameterType="com.myblog.entity.Type">
        insert into t_type(id,name) values(#{id},#{name})
    </insert>

    <delete id="deleteById" >
        delete from t_type where id = #{id}
    </delete>

    <update id="updateType" parameterType="com.myblog.entity.Type">
        update t_type set name = #{name}
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </update>

    <select id="getAllTypeAndBlog" resultMap="type">
        select t.id tid, t.name, b.id bid, b.title,b.type_id
        from myblog.t_type t,myblog.t_blog b
        where t.id = b.type_id
    </select>
    
</mapper>

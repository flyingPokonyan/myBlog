<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myblog.mapper.BlogMapper">

    <resultMap id="blog" type="com.myblog.queryvo.BlogQuery">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="updateTime" column="update_time"></result>
        <result property="recommend" column="recommend"></result>
        <result property="published" column="published"></result>
        <result property="typeId" column="type_id"></result>
        <association property="type" javaType="com.myblog.entity.Type">
            <id property="id" column="id"></id>
            <result property="name" column="name"></result>
        </association>
    </resultMap>

    <resultMap id="firstPageBlog" type="com.myblog.queryvo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeName" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <resultMap id="detailedBlog" type="com.myblog.queryvo.DetailedBlog">
        <id property="id" column="id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeName" column="name"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="blogList" resultMap="blog">
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name
        from myblog.t_blog b left outer join
             myblog.t_type t on b.type_id = t.id order by b.update_time desc
    </select>

    <insert id="saveBlog">
        insert into myblog.t_blog (id,title, content, first_picture, flag,
                                   views, comment_count, appreciation, share_statement, commentabled, published,
                                   recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{commentCount},#{appreciation},
                #{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},
                #{updateTime},#{typeId},#{userId},#{description});
    </insert>

    <delete id="deleteBlog">
        delete from t_blog where id = #{id};
    </delete>

    <select id="findById" resultType="com.myblog.queryvo.BlogShow">
        select b.id,b.flag,b.title,b.content,b.type_id,
               b.first_picture,b.description,b.recommend,b.published,b.share_statement,
               b.appreciation,b.commentabled from myblog.t_blog b  where  b.id = #{id};
    </select>

    <update id="updateBlog" parameterType="com.myblog.queryvo.BlogShow">
        update myblog.t_blog set published = #{published},flag = #{flag} ,
                                 title = #{title}, content = #{content}, type_id = #{typeId},
                                 first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
                                 share_statement = #{shareStatement}, appreciation = #{appreciation},
                                 commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>

    <select id="findBySearch" resultType="com.myblog.queryvo.BlogQuery">
        <bind name="pattern" value="'%' + title + '%'"></bind>
        select b.id,b.title,b.type_id,t.id,t.name from myblog.t_blog b ,myblog.t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id
            </if>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <select id="firstBlogList" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
               t.name ,
               u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id order by b.create_time desc
    </select>

    <select id="recommendBlogList" resultType="com.myblog.queryvo.RecommendBlog">
        select * from myblog.t_blog where t_blog.recommend = true order by t_blog.create_time desc
    </select>

    <select id="searchBlogList" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + search + '%'" />
        select b.id,b.title,b.first_picture, b.views,b.comment_count,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and b.user_id = u.id and (b.content like #{pattern} or b.title like #{pattern})
    </select>

    <select id="getBlogTotal" resultType="Integer">
        select count(*) from t_blog
    </select>
    <select id="getCommentTotal" resultType="Integer">
        select count(*) from t_comment
    </select>
    <select id="getBlogViewTotal" resultType="Integer">
        select coalesce(sum(views),0) from t_blog
    </select>
    <select id="getMessageTotal" resultType="Integer">
        select count(*) from t_message;
    </select>

    <select id="getDetailedBlog" resultMap="detailedBlog">
        select * from t_blog where id = #{id}
    </select>

    <update id="updateBlogViews" parameterType="java.lang.Long">
        update t_blog set views = views + 1 where id = #{id}
    </update>
    
    <update id="getCommentCountById" parameterType="java.lang.Long">
        update t_blog b set comment_count = (select count(*) from t_comment c where c.blog_id = b.id and b.id = #{id}) where b.id = #{id}
    </update>

    <select id="findByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>

</mapper>
